import cv2
import numpy as np
import imutils
import argparse

out = cv2.VideoWriter('output.avi',cv2.VideoWriter_fourcc(*'MJPG'),15.,(640,480))

HOGCV=cv2.HOGDescriptor()
HOGCV.setSVMDetector(cv2.HOGDescriptor_getDefaultPeopleDetector())
def detect(frame):
    boundingboxes,weights=HOGCV.detectMultiScale(frame,winStride=(8,8))
    person=1
    for x,y,w,h in boundingboxes:
        cv2.rectangle(frame,(x,y),(x+w+30,y+h+30),(0,255,0),2)
        person=person+1
    cv2.putText(frame, f'No of people : {person-1}', (40,40), cv2.FONT_HERSHEY_DUPLEX, 0.8, (255,0,0), 2)    
    return frame
def detectImage():
    image=cv2.imread("D:/old photos/201210A0/22102012352.jpg")
    #image=imutils.resize(image,width=min(800,image.shape[1]))
    result=detect(image)
    cv2.imshow("Output",result)
    cv2.waitKey(0)

def detectVideo():
    video = cv2.VideoCapture('C:/Users/user/Desktop/project-final/vedio3.mp4') 

    while video.isOpened():
        check,frame=video.read()
        if check:
            frame=imutils.resize(frame,width=1000,height=1000)
            frame=detect(frame)
            out.write(frame.astype('uint8'))
            cv2.imshow("Output",frame)
            if cv2.waitKey(25) & 0xFF==ord('q'):
                break
        else:
            break
    video.release()
    
def detectCamera():
    video = cv2.VideoCapture(0) 

    while True:
        check,frame=video.read()
        if check:
            frame=imutils.resize(frame,width=min(400,frame.shape[1]))
            frame=detect(frame)
            cv2.imshow("Output",frame)
            if cv2.waitKey(25) & 0xFF==ord('q'):
                break
        else:
            break
    video.release()
            

detectVideo()
